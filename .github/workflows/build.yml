# This workflow will do a clean install, build the source code and run tests across different versions of node
# See: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Next.js CI

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  repository_dispatch:
    types: [openreview-api-updated]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    env:
      API_URL: http://localhost:3000
      NEXT_PORT: 3030
      SUPER_USER: openreview.net
      ACCESS_TOKEN_NAME: openreview.accessToken

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout openreview-web
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 6.0
          mongodb-replica-set: rs0
      - name: Configure sysctl Limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Start Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.0
      - name: Checkout openreview-py
        uses: actions/checkout@v3
        with:
          repository: openreview/openreview-py
          path: openreview-py
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: pip
      - name: Install openreview-py
        run: |
          cd openreview-py
          python -m pip install --upgrade pip
          pip install -e .
      - name: Checkout openreview-api
        uses: actions/checkout@v3
        with:
          repository: openreview/openreview-api-v1
          token: ${{ secrets.OPENREVIEW_ACCESS_TOKEN }}
          path: openreview-api
      - name: Cache openreview-api
        id: cache-openreview-api
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            openreview-api/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('openreview-api/package-lock.json') }}
      - name: Setup openreview-api
        run: |
          cd openreview-api
          mkdir logs
          mkdir files
          mkdir files/attachments
          mkdir files/pdfs
          mkdir files/temp
      - name: Install openreview-api Dependencies
        if: steps.cache-openreview-api.outputs.cache-hit != 'true'
        run: |
          cd openreview-api
          npm install
      - name: Run openreview-api
        run: |
          cd openreview-api
          NODE_ENV=circleci node scripts/clean_start_app.js &
      - name: Cache openreview-web Build
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}
      - name: Build & Run openreview-web
        run: npm ci
        run: npm run lint
        run: NODE_ENV=production npm run build
        run: NODE_ENV=production npm run start &
      - name: Run TestCafe Tests
        uses: DevExpress/testcafe-action@latest
      - name: Upload Test Videos
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: videos
          path: /home/runner/work/openreview-web/openreview-web/videos/
      - name: Check API Logs
        if: ${{ failure() }}
        run: |
          cd openreview-api/logs
          cat "$(ls -rt | tail -n1)"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/997553930042/locations/global/workloadIdentityPools/github-identity-pool/providers/github-identity-provider'
          service_account: 'github-actions@sunlit-realm-131518.iam.gserviceaccount.com'
          create_credentials_file: true
          cleanup_credentials: true
          export_environment_variables: true
      - name: Install Google Cloud
        uses: google-github-actions/setup-gcloud@v0
      - name: Deploy
        run: |
          gcloud compute --project "sunlit-realm-131518" ssh --zone "us-central1-b" openreview@dev-instance-1 --command 'export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && bash bin/deploy.sh' --quiet
          gcloud compute --project "sunlit-realm-131518" ssh --zone "us-central1-b" openreview@dev-instance-1 --command 'export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && bash bin/deploy-openreview-py.sh' --quiet
