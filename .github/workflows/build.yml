# This workflow will do a clean install, build the source code and run tests across different versions of node
# See: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Next.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: '4.2'
    - name: Configure sysctl limits
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144
    - uses: getong/elasticsearch-action@v1.2
      with:
        elasticsearch version: '7.6.1'
        host port: 9200
        container port: 9200
        host node port: 9300
        node port: 9300
        discovery type: 'single-node'
    - name: Start Redis
      uses: supercharge/redis-github-action@1.1.0
      with:
        redis-version: 6
    - name: Checkout openreview API
      uses: actions/checkout@v2
      with:
        repository: openreview/openreview
        token: ${{ secrets.OPENREVIEW_ACCESS_TOKEN }}
        path: openreview-api
    - name: Run openreview API
      run: |
        cd openreview-api
        mkdir logs
        mkdir files
        mkdir files/attachments
        mkdir files/pdfs
        npm install
        NODE_ENV=circleci node scripts/clean_start_app.js &
    # - name: Test openreview API
    #   uses: wei/wget@v1
    #   with:
    #     args: --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 10 http://localhost:3000
    - run: npm ci
    - run: npm run lint
    - run: npm run build
    - run: export NEXT_PORT=3030
    - run: export SUPER_USER=openreview.net
    - run: cp .env.sample .env
    - run: npm run start &
      env:
        NEXT_PORT: 3030
        SUPER_USER: openreview.net
    - name: Run TestCafe Tests
      uses: DevExpress/testcafe-action@latest
      with:
        args: "chrome tests/registerPage.ts"
      env:
        NEXT_PORT: 3030
    - name: Check logs
      if: ${{ failure() }}
      run: |
        cd openreview-api/logs
        cat "$(ls -rt | tail -n1)"
