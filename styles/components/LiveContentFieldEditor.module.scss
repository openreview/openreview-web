@use '../utils/constants';
/**
 * LiveContentFieldEditor.module.scss
 *
 * This file will house all custom module-scoped styles
 * for the LiveContentFieldEditor component and its sub-components.
 */

/* ============================================= */
/* Root/Global Variables & Mixins             */
/* ============================================= */

/*
  Place any global SCSS variables, color definitions, or mixins here.
  For example:
*/
/*
:root {
  --brand-color: #1b8ceb;
  --hover-bg: #f9f9f9;
  --selected-bg: #eef6fc;
  --transition-duration: 0.2s;
}
*/

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInButtons {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* ============================================= */
/* Editor Container Layout                    */
/* ============================================= */

/* Outer container for the entire editor */
.editorContainer {
  display: flex;
  flex-direction: column;
  height: 90vh;
  margin: 1em 0;      /* Adjust vertical margin as needed */
  padding-top: 1em;   /* Provide separation from elements above */
  overflow-y: hidden;   /* Prevents horizontal scrollbars */
}

/* Container for the field list & field editor plus options panel */
.fieldsContainer {
  display: flex;
  flex: 1;         /* Fills available vertical space */
  min-height: 0;   /* Allow children to shrink if needed */
}
/* Left panel which holds the preview and field list */
.fieldsPreviewPanel {
  display: flex;
  flex-direction: column;
  height: 100%; /* Fill available vertical space */
  min-height: 0; /* Allow children to shrink if needed */
  overflow-y: auto; /* Scroll within the left panel if content is tall */
}
/* Use a different flex value based on active tab */
.leftPanelFull {
  flex: 3;
}
.leftPanelCondensed {
  flex: 1;
}

/*
  1) Header (Tabs, HiddenFieldsToggle)
  - We want this to remain at the top, so no flex growth.
*/
/* The preview area inside the left panel */
.formPreview {
  flex: 1;
  //overflow-y: auto; /* Scroll within the left panel if content is tall */
  min-height: 0;    /* So it doesn't expand beyond its container */
  padding-right: 1rem; /* Optional: add some padding to avoid clipping */
}
/* This container sits below the scrollable area of the left panel */
.saveButtonWrapper {
  padding: 0.75em 1em;
  text-align: center;
  border-top: 1px solid #ccc;  /* Optional visual separator */
  background-color: transparent;
}

/*
  Panel for the Field Options editor on the right.
*/
.optionsPanel {
  flex: 2;
  padding: 10px;
  border-left: 1px solid #ccc;
  overflow-y: auto;
  height: 100%;
}

.disabledTab {
  cursor: not-allowed;
  opacity: 0.6;
}

/* JSON Error Message styling */
.jsonErrorMessage {
  background-color: #ffe6e6;
  color: #cc0000;
  padding: 10px;
  border-radius: 5px;
  text-align: center;
  margin-top: 0.5em;
  display: flex;
  align-items: center;
  justify-content: center;
}

.jsonErrorIcon {
  margin-right: 5px;
}

/* ============================================= */
/* InsertFieldButton                          */
/* ============================================= */

.insertFieldButtonWrapper {
  /* Replace the inline margin: 8px 0 */
  margin: 8px 0;
}

/*
   Container for the horizontal line and plus icon:
   - We keep the fade in/out of opacity via CSS transitions.
   - We create two modifiers for showing vs. hiding the line.
*/
.linePlusContainer {
  display: flex;
  align-items: center;
  cursor: pointer;
  transition: opacity 0.2s ease;

  &.showLine {
    opacity: 1;
  }

  &.hideLine {
    opacity: 0.05;
  }

  /* The horizontal lines on the left & right of the plus icon */
  .flexLine {
    flex: 1;
    border-bottom: 1px solid #ccc;
  }

  /* The plus icon itself */
  .plusIcon {
    color: green;
    margin: 0 8px;
  }
}

/*
  Dropdown container that appears when isOpen=true:
  We apply a fadeIn animation that we define below.
  The rest of the show/hide animation is handled by Framer Motion,
  but the "fadeIn" keyframe can still add a small fade effect.
*/
.dropdownContainer {
  padding: 8px;
  background: transparent;
  position: relative;
  z-index: 999; /* keep it above other elements */
  animation: fadeIn 0.5s ease-out;
}

/* Basic fadeIn keyframes for the dropdown.
   Framer Motion will handle the main transitions,
   but these can supplement the effect.
*/
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/*
  List container for top-level or second-level options:
  replaces inline listStyle, margin, padding, flex layout, etc.
*/
.fadeInList {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;

  /* Example li spacing */
  li {
    margin: 3px 0;

    /* If you need special spacing for the last element,
       you can override it here, e.g.:
    &:last-child {
      margin: 4px 0;
    }
    */
  }
}

/* ============================================= */
/* HiddenFieldsToggle                         */
/* ============================================= */

.hiddenFieldsToggle {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  padding: 4px 8px;
  border-radius: 4px;
  margin-top: 0.5rem;
  transition: background-color 0.2s, color 0.2s, transform 0.2s;
  background-color: transparent;
  transform: scale(1);

  &:hover {
    background-color: #f5f5f5;
    transform: scale(1.02);
  }

  /* Target the icon within the toggle */
  .icon {
    margin-right: 5px;
    color: #666;
    transition: color 0.2s;
  }

  &:hover .icon {
    color: #333;
  }

  /* Target the text within the toggle */
  .text {
    color: #666;
    transition: color 0.2s;
  }

  &:hover .text {
    color: #333;
  }
}

/* ============================================= */
/* FieldRow, FieldControls & FieldPreview     */
/* ============================================= */

/* ============================================= */
/* FieldRow Styles                             */
/* ============================================= */

.fieldRow {
  display: flex;
  align-items: stretch;
  margin-bottom: 15px;
  margin-right: 2em;
  border-radius: 0.75em;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;

  &.selected {
    /* Optional: add styling to visually indicate selection */
    background-color: #eef6fc;
    border-left: 2px solid #1b8ceb;

    /* Optional: add hover effect when selected*/
    &:hover {
      background-color: #eef6fc;
    }

  }

  /* Optional: add hover effect */
  &:hover {
    background-color: #f9f9f9;
  }
}

/* ============================================= */
/* FieldControls Styles                        */
/* ============================================= */

.fieldControls {
  margin-right: 10px;
  text-align: center;
  width: 50px;
  display: flex;
  flex-direction: column;
  align-items: center;

  .deleteButton {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    .close {
      display: flex;
      justify-content: center;
      align-items: center;
      color: red;
      font-size: 0.75em;
    }
  }

  .controlButtons {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    button {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-left: 0.5rem;
      margin-right: 0.5rem;
    }

    /* Up button gets a bottom margin; down button gets a top margin.
       Using :first-of-type and :last-of-type selectors works if the buttons are the only children.
    */
    button:first-of-type {
      margin-bottom: 2px;
    }
    button:last-of-type {
      margin-top: 2px;
    }
  }
}

/* ============================================= */
/* FieldPreview Styles                         */
/* ============================================= */

.fieldPreview {
  flex: 1;
}

/* ============================================= */
/* FieldOptionsPanel & Sub-Components         */
/* ============================================= */

/*
  Wrapper for the entire "Field Options" side panel.
*/
/* Optional: Override default Bootstrap form-group styles if needed */
.formGroupOverride {
  /* For example, you could adjust bottom margin */
  margin-bottom: 1em;
  label {
    margin-right: 5px;
    margin-bottom: 0.5em;
  }
  input {
    margin-right: 5px;
  }
}

/* ============================================= */
/* BasicFieldOptions Styling
/* ============================================= */

/* Style for the description textarea */
.descriptionTextarea {
  width: 100%;
  box-sizing: border-box;
  height: 20vh !important;
  resize: vertical;
}

/* Checkbox groups (e.g. for "Required" and "Hide from Submitters") */
.checkboxGroup {
  margin-right: 5px;
  margin-bottom: 0;

  input {
    margin-right: 5px;
  }
}

/* Styles for the Selected Readers section */
.selectedReadersContainer {
  padding: 8px;
  min-height: 2em;
}

/* Style for each selected reader option */
.selectedReaderOption {
  display: inline-block;
  background-color: #e0e0e0;
  border-radius: 4px;
  padding: 2px 6px;
  margin: 2px;
  position: relative;

  .removeIcon {
    margin-left: 5px;
    opacity: 0.3;
    cursor: pointer;
    transition: opacity 0.2s;
  }

  .removeIcon:hover {
    opacity: 1;
    color: red;
  }
}

/*
  Each sub-panel (e.g. BasicFieldOptions, ChoiceFieldOptions, etc.)
  can get its own class if needed.
*/
.choiceFieldOptions {
  // e.g. margin-top: 1em;
}
.stringFieldOptions {
  // ...
}
.numericFieldOptions {
  // ...
}
.specialFieldOptions {
  // ...
}

/* ============================================= */
/* CollapsibleSection                         */
/* ============================================= */

.collapsibleSection {
  border-radius: 4px;
  margin-bottom: 1em;
}

.collapsibleHeader {
  display: flex;
  align-items: center;
  cursor: pointer;
  padding: 0.25em;
  background-color: #f9f9f9;
  transition: background-color 0.2s ease-in-out;

  &:hover {
    background-color: #f1f1f1;
  }

  .collapsibleIcon {
    margin-right: 0.5em;
  }
}

.collapsibleContentContainer {
  overflow: hidden;
  /* The height and opacity animation is handled by Framer Motion */
}

.collapsibleContentInner {
  padding: 0.5em 1em;
  border-left: 2px solid #1b8ceb;
}
/* ============================================= */
/* JSON Editor & Error Messages               */
/* ============================================= */

/*
  Code editor wrapper.
*/
.jsonEditorWrapper {
  // e.g. width: 100%; height: 400px; etc.
}

/*
  Error message styling for invalid JSON warnings.
*/
.jsonErrorMessage {
  // e.g. background-color: #ffe6e6; color: #cc0000;
  // padding: 10px; border-radius: 5px; text-align: center;
}
